/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                qmac_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  GUI |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | LWR | SPC |   | ENT | RSE  | CTL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt DEL BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo 4 &kp SPACE   &kp RET &mo 5 &kp RCTRL
                        >;
                };
                
                qwin_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &mt DEL BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo 4 &kp SPACE   &kp RET &mo 5 &kp RGUI
                        >;
                };
                
                cmac_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | LGUI |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT |
//                    | ALT | LWR | SPC |   | ENT | RSE  | CTL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp L &kp J  &kp U     &kp Y   &kp SEMI &mt DEL BSPC
   &kp LGUI  &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo 4 &kp SPACE   &kp RET &mo 5 &kp RCTRL
                        >;
                };
                
                cwin_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | LCTL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | SHFT |
//                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp L &kp J  &kp U     &kp Y   &kp SEMI &mt DEL BSPC
   &kp LCTL  &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo 4 &kp SPACE   &kp RET &mo 5 &kp RGUI
                        >;
                };
                
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |     |     |     |     |  [  |   |  ]  | LFT | DWN |  UP | RGT |   \  |
// |      |     |     |     |     |     |   |  `  |  -  |  +  |  *  |  /  |   =  |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &kp ESC   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7     &kp N8    &kp N9     &kp N0    &trans
   &none     &none     &none     &none     &none     &kp LBKT  &kp RBKT  &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT &kp BSLH
   &none     &none     &none     &none     &none     &none     &kp GRAVE &kp MINUS  &kp PLUS  &kp STAR   &kp FSLH  &kp EQUAL
                                 &trans    &trans    &trans    &trans    &trans     &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |     |     |     |     |  {  |   |  }  |     |     |     |     | "|"  |
// |      |     |     |     |     |     |   |  ~  |  _  |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR &trans
   &none   &none    &none  &none    &none    &kp LBRC    &kp RBRC  &none     &none    &none    &none    &kp PIPE
   &none   &none    &none  &none    &none    &none       &kp TILDE &kp UNDER &none    &none    &none    &none
                    	   &trans   &trans   &trans      &trans    &trans    &trans,
                        >;
                };
                
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | QMAC| QWIN| CMAC| CWIN|     | LOCK |
// |      |     |     | PREV|PPAUS| NEXT|   | MUTE| VOL-| VOL+|     |     |      |
// |      |     |     |     |     |     |   |     | BRI-| BRI+|     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &tog 0     &tog 1         &tog 3        &tog 4    &none &kp C_AL_LOCK
   &none      &none        &none        &kp C_PREV   &kp C_PP     &kp C_NEXT     &kp C_MUTE &kp C_VOL_DOWN &kp C_VOL_UP  &none     &none &none
   &none      &none        &none        &none        &none        &none          &none      &none          &none         &none     &none &none
                    	                &none        &trans       &none          &none      &trans         &none
                        >;
                };
        };
        
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <4 5>;
                        then-layer = <6>;
        };
    };
};
